#!/bin/bash
source pongstr.packages

## Install Homebrew taps and packages
brews() {
  brew update
  brew upgrade

  for tap in "${brew_taps[@]}"
  do
    echo ""
    printf "\e[1;32m\nInstalling \e[1;34m$tap\e[0m\n"
    brew tap $tap
  done

  for package in "${brew_formulas[@]}"
  do
    printf "\e[1;32m\nInstalling \e[1;34m$package\e[0m\n"
    echo ""
    brew install $package
  done
}

# Install Homebrew casks
casks() {
  for package in "${brew_casks[@]}"
  do
    printf "\e[1;32m\nInstalling \e[1;34m$package\e[0m\n"
    echo ""
    brew cask install $package
  done
}

# Install Ruby gems
rgems() {
  for package in "${ruby_gems[@]}"
  do
    printf "\e[1;32m\nInstalling \e[1;34m$package\e[0m\n"
    echo ""
    brew cask install $package
  done
}

# Install Node Modules
npms() {
  for package in "${node_packages[@]}"
  do
    printf "\e[1;32m\nInstalling \e[1;34m$package\e[0m\n"
    echo ""
    npm i -g $package
  done
}


echo ""
printf "%s" $'\e[1;32m
  ██████╗  ██████╗ ███╗   ██╗ ██████╗ ███████╗████████╗██████╗
  ██╔══██╗██╔═══██╗████╗  ██║██╔════╝ ██╔════╝╚══██╔══╝██╔══██╗
  ██████╔╝██║   ██║██╔██╗ ██║██║  ███╗███████╗   ██║   ██████╔╝
  ██╔═══╝ ██║   ██║██║╚██╗██║██║   ██║╚════██║   ██║   ██╔══██╗
  ██║     ╚██████╔╝██║ ╚████║╚██████╔╝███████║   ██║   ██║  ██║
  ╚═╝      ╚═════╝ ╚═╝  ╚═══╝ ╚═════╝ ╚══════╝   ╚═╝   ╚═╝  ╚═╝\e[1;31m
      Dotfiles v0.5.0 https://github.com/pongstr/dotfiles\e[0m\n'

printf "\n\e[1;32m
  📦  Please select which packages to install.
  \e[1;30m
  [*] Skip installation\e[1;36m
  [1] brew  :install homebrew taps and formulas .
  [2] cask  :install macos apps via homebrew cask.
  [3] gem   :install ruby gems
  [4] npm   :install node modules
  [5] all   :install all of the above.
\n\e[0m"

read -p "  so, which one? " PKG

while true; do
  case $PKG in
    1|brew)
      printf "\n\e[0;34mBrew Taps+Packages\n\e[0m"
      brews
      break;;
    2|cask)
      printf "\n\e[0;34mBrew Casks\n\e[0m"
      casks
      break;;
    3|gem)
      printf "\n\e[0;34mRuby Gems\n\e[0m"
      rgems
      break;;
    4|npm)
      printf "\n\e[0;34mNode Packages\n\e[0m"
      npms
      break;;
    5|all)
      echo "Installing all packages..."
      brews
      casks
      rgems
      npms
      break;;
    *)
      echo "  None selected, skipping installation..."
      break;;
  esac
done

echo "
"

HOME_PATH=$HOME

printf "  \e[1;32mInstall omZSH customisations? [Y/n]\e[0m"
read -p "  " omZSH

if [ ! -z $omZSH ]; then
  if [ $omZSH == "Y" ] || [ $omZSH == "y" ]; then
    cp $(pwd)/.omzsh/pongstr.zsh-theme $HOME_PATH/.oh-my-zsh/themes/pongstr.zsh-theme
    cp $(pwd)/.zshrc $HOME/.zshrc
    sleep 1
    source $HOME_PATH/.zshrc
  else
    echo "  Skipping omZSH settings...
    "
  fi
else
  echo "  Skipping omZSH settings...
  "
fi


printf "  \e[1;32mInstall Vim settings? [Y/n]\e[0m"
read -p "  " VIM

if [ ! -z $VIM ]; then
  if [ $VIM == "Y" ] || [ $VIM == "y" ]; then
    echo "  Installing Vim settings"
    ln -sf $(pwd)/.vim $HOME_PATH/.vim
    ln -sf $(pwd)/.vimrc $HOME_PATH/.vimrc
    echo "  Done!"
  else
    echo "  Skipping Vim settings...
    "
  fi
else
  echo "  Skipping Vim settings...
  "
fi

printf "  \e[1;32mInstall VSCode settings? [Y/n]\e[0m"
read -p " " VSCODE

if [ ! -z $VSCODE ]; then
  if [ $VSCODE == "Y" ] || [ $VSCODE == "y" ]; then
    exec $(pwd)/.vscode/setup
  else
    echo "  Skipping VSCode settings...
    "
  fi
else
  echo "  Skipping VSCode settings...
  "
fi

exit 0
